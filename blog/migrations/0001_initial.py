# Generated by Django 5.2 on 2025-07-06 19:27

import blog.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Category Name')),
                ('slug', models.SlugField(help_text='A URL-friendly version of the category name', max_length=255, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Title')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_categories', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Post Title')),
                ('slug', models.SlugField(help_text='A URL-friendly version of the post title', max_length=255, unique=True, verbose_name='URL Slug')),
                ('excerpt', models.TextField(blank=True, help_text='A short summary of the post', null=True, verbose_name='Excerpt')),
                ('content', models.TextField(verbose_name='Content')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to=blog.models.blog_image_upload_path, verbose_name='Featured Image')),
                ('youtube_url', models.URLField(blank=True, null=True, verbose_name='YouTube URL')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Post')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Title')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.blogcategory', verbose_name='Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_likes', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='blog.blogpost', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Blog Like',
                'verbose_name_plural': 'Blog Likes',
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Comment')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.blogcomment', verbose_name='Parent Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Blog Comment',
                'verbose_name_plural': 'Blog Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Tag Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='PUBLISHED', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Blog Tag',
                'verbose_name_plural': 'Blog Tags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='blog_blogta_slug_7db848_idx'), models.Index(fields=['status'], name='blog_blogta_status_190449_idx')],
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='blog.blogtag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BlogView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='blog.blogpost', verbose_name='Post')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_views', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Blog View',
                'verbose_name_plural': 'Blog Views',
            },
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['slug'], name='blog_blogca_slug_465e50_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['status'], name='blog_blogca_status_840897_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['created_at'], name='blog_blogca_created_2d2333_idx'),
        ),
        migrations.AddIndex(
            model_name='bloglike',
            index=models.Index(fields=['post'], name='blog_blogli_post_id_87efa2_idx'),
        ),
        migrations.AddIndex(
            model_name='bloglike',
            index=models.Index(fields=['user'], name='blog_blogli_user_id_fd2c86_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bloglike',
            unique_together={('post', 'user')},
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['post'], name='blog_blogco_post_id_09d28c_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['user'], name='blog_blogco_user_id_3e8267_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['is_approved'], name='blog_blogco_is_appr_3ccb35_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='blog_blogpo_slug_361555_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['status'], name='blog_blogpo_status_9c1956_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['is_featured'], name='blog_blogpo_is_feat_aa3e07_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['published_at'], name='blog_blogpo_publish_9c2556_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['view_count'], name='blog_blogpo_view_co_d4ddde_idx'),
        ),
        migrations.AddIndex(
            model_name='blogview',
            index=models.Index(fields=['post'], name='blog_blogvi_post_id_de23be_idx'),
        ),
        migrations.AddIndex(
            model_name='blogview',
            index=models.Index(fields=['user'], name='blog_blogvi_user_id_beb795_idx'),
        ),
        migrations.AddIndex(
            model_name='blogview',
            index=models.Index(fields=['ip_address'], name='blog_blogvi_ip_addr_c66887_idx'),
        ),
        migrations.AddIndex(
            model_name='blogview',
            index=models.Index(fields=['created_at'], name='blog_blogvi_created_d45b93_idx'),
        ),
    ]
